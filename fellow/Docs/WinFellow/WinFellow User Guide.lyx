#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "WinFellow FAQ"
\pdf_author "Torsten Enderling, Worfje"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
WinFellow User Guide
\end_layout

\begin_layout Author

\noun on
Torsten Enderling
\noun default
 (carfesh@gmx.net) 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 
\noun on
Worfje
\noun default
 (worfje@gmx.net)
\end_layout

\begin_layout Date
v0.5.3 Beta (2013/10/18)
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagebreak
\end_layout

\end_inset


\end_layout

\begin_layout Part
Disclaimer
\end_layout

\begin_layout Standard
WinFellow is provided without warranty of any kind.
\end_layout

\begin_layout Standard
None of the authors of WinFellow shall in any event be liable for any direct,
 consequential, incidental, indirect or special damages even if advised
 of the possibility of such damages.
 In particular, the authors shall have no liability for any damage loss
 or corruption of data or programs stored in or used in conjunction with
 WinFellow, nor shall the authors be liable for the cost of retrieving or
 replacing damaged lost or corrupted data.
\end_layout

\begin_layout Part
Credits
\end_layout

\begin_layout Section*
The WinFellow Team
\end_layout

\begin_layout Standard
Created and developed by
\end_layout

\begin_layout Standard

\noun on
Petter Schau
\noun default
 (petschau@gmail.com)
\end_layout

\begin_layout Standard
\noindent
with help from
\end_layout

\begin_layout Standard

\noun on
Worfje
\noun default
 (worfje@gmx.net)
\end_layout

\begin_layout Standard

\noun on
Torsten Enderling
\noun default
 (carfesh@gmx.net)
\end_layout

\begin_layout Section*
The Beta Tester Team
\end_layout

\begin_layout Standard
Special thanks go out to the beta tester team.
 Through their dedication, dozens of bugs could be fixed before they were
 ever released to the public.
\end_layout

\begin_layout Standard

\noun on
Brian Andreasen
\end_layout

\begin_layout Standard

\noun on
Giuseppe Bagnato
\end_layout

\begin_layout Standard

\noun on
BenniP
\end_layout

\begin_layout Standard

\noun on
Attila Borsanyi
\end_layout

\begin_layout Standard

\noun on
Jan Brockmann
\end_layout

\begin_layout Standard

\noun on
Matthew Bushell
\end_layout

\begin_layout Standard

\noun on
Jim Durdan
\end_layout

\begin_layout Standard

\noun on
Andreas Eibach
\end_layout

\begin_layout Standard

\noun on
Damien Green
\end_layout

\begin_layout Standard

\noun on
Vincent Haot
\end_layout

\begin_layout Standard

\noun on
Marco Sascha Sven Hoppe
\end_layout

\begin_layout Standard

\noun on
Paul Irvine
\end_layout

\begin_layout Standard

\noun on
Malc Jennings
\noun default
 (ale@emuhq.com)
\end_layout

\begin_layout Standard

\noun on
Magnus Jensen
\end_layout

\begin_layout Standard

\noun on
Nick K.
 Kalogeras
\end_layout

\begin_layout Standard

\noun on
Nick Lamburn
\end_layout

\begin_layout Standard

\noun on
Marcelo Nogueira Magri
\end_layout

\begin_layout Standard

\noun on
Tarnyko Rasty
\end_layout

\begin_layout Standard

\noun on
Andy Riley
\end_layout

\begin_layout Standard

\noun on
Dominik Schmidt
\end_layout

\begin_layout Standard

\noun on
Bryn Thompson
\end_layout

\begin_layout Standard

\noun on
Tomasz Tomaszek
\end_layout

\begin_layout Standard

\noun on
Phil Underhill
\end_layout

\begin_layout Standard

\noun on
Robert van Buren
\end_layout

\begin_layout Standard

\noun on
Christos Vasdekis
\end_layout

\begin_layout Standard

\noun on
Andy Voss
\end_layout

\begin_layout Standard

\noun on
Tim Wilson 
\noun default
aka Emulator Chicken
\end_layout

\begin_layout Section*
Programming Contributions
\end_layout

\begin_layout Standard
\noindent

\noun on
Ted
\noun default
M
\noun on
aul
\noun default
 (dan@dillinja.org)
\end_layout

\begin_layout Itemize
partially porting Fellow to Linux
\end_layout

\begin_layout Standard
\noindent

\noun on
Mnd
\noun default
 (novamarco@hotmail.com)
\end_layout

\begin_layout Itemize
win32 keyboard, joystick & mouse modules
\end_layout

\begin_layout Standard
\noindent

\noun on
Roman Dolejsi
\noun default
 (roman@sorry.vse.cz) & 
\noun on
David Voracek
\noun default
 (assassin@paru.cas.cz)
\end_layout

\begin_layout Itemize
various improvements in GUI
\end_layout

\begin_layout Itemize
keyboard LED code 
\end_layout

\begin_layout Itemize
main design and partial implementation of 68010/20/30 instruction set emulation
 
\end_layout

\begin_layout Itemize
makeadf (David) 
\end_layout

\begin_layout Itemize
generalized BMP dump code + various other improvements
\end_layout

\begin_layout Standard
\noindent

\noun on
Rainer Sinsch
\noun default
 (sinsh@stud.uni-frankfurt.de)
\end_layout

\begin_layout Itemize
MOD-ripper
\end_layout

\begin_layout Itemize
Low-pass filter
\end_layout

\begin_layout Itemize
Wav-capture patch
\end_layout

\begin_layout Section*
Thanks Also Go To
\end_layout

\begin_layout Standard

\noun on
Andreas Axelsson
\noun default
, 
\noun on
Brett Eden
\noun default
, 
\noun on
Hetz Ben Hamo
\noun default
, 
\noun on
Masashi Yamaguchi
\noun default
, 
\noun on
Jeremy Crawford
\noun default
 and the DOS Documentation Crew: 
\noun on
Roberto Gasparrini
\noun default
, 
\noun on
Laurent Dugois
\noun default
, 
\noun on
Andreas Eibach
\noun default
, 
\noun on
Lou C.
 Fer
\noun default
, 
\noun on
Kenneth Vestergaard Schmidt
\noun default
, 
\noun on
Pawel Jedrak
\noun default
, 
\noun on
Peter Stolk
\noun default
 and 
\noun on
Marcelo Gurgacz
\noun default
, as well as numerous others for taking interest in the emulator.
\end_layout

\begin_layout Standard
Thanks also to the Cloanto RetroPlatform team (
\noun on
Mike C.
 Battilana
\noun default
, 
\noun on
Oscar Sillani
\noun default
 and anyone else who may have been involved) for their support integrating
 WinFellow into Amiga Forever.
\end_layout

\begin_layout Section*
Website Translations
\end_layout

\begin_layout Standard
\noindent
Mnd (Italian)
\end_layout

\begin_layout Standard
\noindent
Wizard (German)
\end_layout

\begin_layout Standard
\noindent
Sha! (French)
\end_layout

\begin_layout Standard
\noindent
Bachfire (Danish)
\end_layout

\begin_layout Standard
\noindent
Petter (Norwegian)
\end_layout

\begin_layout Standard
\noindent
Apple (Finnish)
\end_layout

\begin_layout Standard
\noindent
Solamnic (Greek)
\end_layout

\begin_layout Standard
\noindent
Leon (Turkish)
\end_layout

\begin_layout Standard
\noindent
SewerRat (Portuguese)
\end_layout

\begin_layout Standard
\noindent
Szatan (Polish)
\end_layout

\begin_layout Standard
\noindent
Bigma (Dutch)
\end_layout

\begin_layout Standard
\noindent
OrB (Spanish)
\end_layout

\begin_layout Section*
Libraries used
\end_layout

\begin_layout Subsection*
zlib
\end_layout

\begin_layout Standard
Copyright © 1995-1998 
\noun on
Jean-loup Gailly
\noun default
 and 
\noun on
Mark Adler
\end_layout

\begin_layout Section*
Other sources used
\end_layout

\begin_layout Subsection*
UAE Filesystem handler
\end_layout

\begin_layout Standard
Copyright © 1996-2000 
\noun on
Bernd Schmidt
\noun default
, 
\noun on
Ed Hanway
\noun default
, 
\noun on
Gustavo Goedert
\noun default
 and other UAE contributors.
 UAE filesystem sources are under the GNU GPL; used with permission.
\end_layout

\begin_layout Subsection*
xDMS
\end_layout

\begin_layout Standard
The xDMS v1.3 portable DMS archive unpacker is public domain software written
 by 
\noun on
Andre Rodrigues de la Rocha
\noun default
 used with his kind permission.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagebreak
\end_layout

\end_inset


\end_layout

\begin_layout Part
What's New in WinFellow 0.5.3?
\end_layout

\begin_layout Standard
Thanks for your interest in WinFellow.
 Compared to version 0.5.2 there are a number of changes in this build, with
 the most significant ones being:
\end_layout

\begin_layout Itemize
New features:
\end_layout

\begin_deeper
\begin_layout Itemize
support for extended ROM images (only unencrypted ones for the moment, as
 a CDTV or CD32 profile cannot be used anyway) - this gives the ability
 to start from the AROS boot ROM
\end_layout

\end_deeper
\begin_layout Itemize
Changed functionality:
\end_layout

\begin_deeper
\begin_layout Itemize
the default configuration contains 512kB chip/bogo memory now and has the
 real-time clock active (Amiga 500 with A-501 expansion)
\end_layout

\begin_layout Itemize
the default configuration is now windowed and has LEDs active
\end_layout

\begin_layout Itemize
chip memory mirroring has been implemented for OCS chipsets; the change
 was required for compatibility reasons, as some titles rely on it
\end_layout

\begin_deeper
\begin_layout Itemize
because of this change, chip memory is now limited to 512kB when an OCS
 blitter has been configured; if you need to use more, please use the ECS
 Agnus blitter in your display configuration (it is an actual limitation
 of the OCS chipset)
\end_layout

\end_deeper
\begin_layout Itemize
support for the original Amiga 1000 boot process from Kickstart disk boot;
 configure the A1000 bootstrap ROM like any other ROM image for the feature
 to be automatically enabled
\end_layout

\begin_layout Itemize
support for keyboard-initiated reset - press Ctrl+Left Windows+Right Windows
 or Ctrl+Left Windows+Context Menu (as not all keyboards have a right Windows
 key) to initiate a reboot within an emulated session
\end_layout

\end_deeper
\begin_layout Itemize
Bug fixes:
\end_layout

\begin_deeper
\begin_layout Itemize
implemented bogo memory mirroring for ECS chipset with 512kB chip/bogo memory
 (required by the demo Move any Mountain)
\end_layout

\begin_layout Itemize
fix for CIA timer logic (fixes the game Atomix)
\end_layout

\begin_layout Itemize
fixes for several CPU instructions:
\end_layout

\begin_deeper
\begin_layout Itemize
'020 bit-field instructions were re-implemented (fix for Lotus Esprit Turbo
 Challenge 96k)
\end_layout

\begin_layout Itemize
ASL instruction's overflow detection was improved
\end_layout

\begin_layout Itemize
MULU flag check improved
\end_layout

\end_deeper
\begin_layout Itemize
escape key special handling in Amiga Forever improved (some titles would
 not detect an escape key press before)
\end_layout

\end_deeper
\begin_layout Standard
Please see the included file ChangeLog.txt for a full list of changes, including
 minor bug fixes which are not listed above.
\end_layout

\begin_layout Part
System Requirements
\end_layout

\begin_layout Standard
WinFellow is highly optimized for execution on low-end systems.
 It can be executed on any of the following operating systems:
\end_layout

\begin_layout Itemize
Windows XP
\end_layout

\begin_layout Itemize
Windows Vista
\end_layout

\begin_layout Itemize
Windows 7
\end_layout

\begin_layout Itemize
Windows 8 (including Windows 8.1)
\end_layout

\begin_layout Standard
It does not have any particularly high CPU requirements, and should work
 well on any system capable of running one of these operating systems.
 However, for advanced features like 2x graphics mode, a relatively fast
 CPU will be required (a minimum of 2GHz is recommended).
\end_layout

\begin_layout Standard
For optimum performance, the graphics card should support DirectDraw hardware
 acceleration.
 Use is possible without, but performance will be reduced drastically.
\end_layout

\begin_layout Part
Frequently Asked Questions
\end_layout

\begin_layout Section
Miscellaneous
\end_layout

\begin_layout Subsection
I can't get <put your favorite game or demo here> working.
\end_layout

\begin_layout Standard
Many older games require special settings.
 Generally if having trouble check the following check-list:
\end_layout

\begin_layout Itemize
some Kickstart versions require special CPU models, so play around with
 reasonable combinations of them; for example it is a bad idea to run Kickstart
 1.2 on a '030 CPU
\end_layout

\begin_layout Itemize
some games are written for a fixed amount of Bogo or Chip memory, so try
 setting them both to 512 kB or even disable Bogo memory completely
\end_layout

\begin_layout Itemize
not all games behave nicely (some control the hardware directly) so that
 you may run into trouble when using things like "Fast Disk-DMA" or the
 immediate blitter
\end_layout

\begin_layout Itemize
many old games only make use of the first floppy drive and some do the strangest
 things when you try to use two drives
\end_layout

\begin_layout Itemize
timing may be critical, as some games do timing delays not by the timer
 but by delay loops; this will result in trouble when using CPU speeds other
 than the original 7 MHz
\end_layout

\begin_layout Itemize
If in doubt, use a default A500 setting like:
\end_layout

\begin_deeper
\begin_layout Itemize
68000 CPU at 7 MHz
\end_layout

\begin_layout Itemize
1 floppy drive (disable the others!), leave "Fast Disk-DMA" unchecked
\end_layout

\begin_layout Itemize
512 kB Chip and eventually 512 kB Bogo RAM
\end_layout

\begin_layout Itemize
Kickstart 1.3 or 1.2
\end_layout

\begin_layout Itemize
normal, delayed OCS blitter
\end_layout

\begin_layout Itemize
no filesystems or hardfiles, "Disable Autoconfig-devices"
\end_layout

\begin_layout Standard
If this configuration doesn't work and it's really an A500 game (not an
 AGA thing or such) it's possibly a WinFellow problem.
\end_layout

\end_deeper
\begin_layout Subsection
Where can I find/download the Kickstart ROM file?
\end_layout

\begin_layout Standard
You can buy the Kickstart ROM at 
\begin_inset CommandInset href
LatexCommand href
name "Cloanto"
target "http://www.amigaforever.com"

\end_inset

.
\end_layout

\begin_layout Subsection
I installed Workbench, but it refuses to load up.
\end_layout

\begin_layout Standard
Though it is possible to install Workbench into a directory, you must make
 sure that you install it into your hardfile or filesystem root directory.
\end_layout

\begin_layout Subsection
The keys O and P aren't working, why is this?
\end_layout

\begin_layout Standard
Since the 'enable autofire' is placed on those keys, the keys aren't used
 as input for the Amiga keybuffer.
 Just remove Keyboard Layout 1 from gameport 1 or 2 and the P and O keys
 will work again.
 
\end_layout

\begin_layout Subsection
How to play games and run applications with WinFellow?
\end_layout

\begin_layout Standard
This is the general procedure to play a game or run applications on WinFellow:
\end_layout

\begin_layout Enumerate
start WinFellow
\end_layout

\begin_layout Enumerate
click on the configuration button
\end_layout

\begin_layout Enumerate
select the memory propertysheet
\end_layout

\begin_layout Enumerate
select a KickROM in the kickstart image edit control
\end_layout

\begin_layout Enumerate
click the OK button to return to the main window
\end_layout

\begin_layout Enumerate
select a ADF image containing your game
\end_layout

\begin_layout Enumerate
start the emulation by clicking start emulation
\end_layout

\begin_layout Standard
That's it, you should see the emulation window booting the KickROM (switching
 from dark gray, light gray to white) and then loading from the disk.
\end_layout

\begin_layout Section
Floppy disk images
\end_layout

\begin_layout Standard
Floppy disk images are used to simulate floppy drives connected to the emulated
 Amiga.
 This is necessary, as a PC can't read Amiga floppy disks.
\end_layout

\begin_layout Subsection
Which file formats are supported?
\end_layout

\begin_layout Standard
WinFellow supports *.adf disk images and the compressed *.adz, *.adf.gz or *.dms
 images; support for these is built into WinFellow, so you don't need any
 additional executables.
 
\end_layout

\begin_layout Subsubsection
ADF images
\end_layout

\begin_layout Standard
Normal *.adf files are similar to a hardfile; they contain the contents of
 an Amiga floppy disk dumped into a file and thus are always 880 kb large
 for normal DD floppies.
 WinFellow can handle these without problems.
\end_layout

\begin_layout Standard
Note that there is also an "Extended" ADF file format, which is used for
 example by the game backups you can download from the 
\begin_inset CommandInset href
LatexCommand href
name "Factor 5"
target "http://factor5.de/downloads.shtml"

\end_inset

 homepage; these files contain some tracks which are specially encoded;
 you can recognize these easily by their file size, as they are always larger
 than 880 kB.
 WinFellow has limited support for these, and they worked fine in our tests.
 Should you experience any crashes if you attempt to use them, please let
 us know!
\end_layout

\begin_layout Subsubsection
ADZ and DMS images
\end_layout

\begin_layout Standard
ADZ and DMS images may be regarded as normal ADF files that have been compressed
 to reduce their size; when inserting such files WinFellow decompresses
 them into a temporary ADF file, which is then used for your emulation session.
 Note that any changes saved to compressed images will be lost as soon as
 you quit the emulator.
 So to write changes to a disk decompress it manually before starting to
 work on it.
\end_layout

\begin_layout Subsubsection
IPF images
\end_layout

\begin_layout Standard
Experimental support for *.ipf files (floppy disk images generated by the
 
\begin_inset CommandInset href
LatexCommand href
name "Software Preservation Society"
target "http://www.softpres.org"

\end_inset

) is available, but will only work in a few cases (the image must not be
 
\begin_inset Quotes eld
\end_inset

flakey
\begin_inset Quotes erd
\end_inset

, which usually means copy protected).
 IPF images will only function when the user DLL from the IPF Support Library
 is downloaded and copied into the WinFellow directory.
 The Windows (32-bit) version 4.2 has been tested to work.
\end_layout

\begin_layout Subsection
Saving games doesn't work.
\end_layout

\begin_layout Standard
When trying to save games there are some things you should take care of:
\end_layout

\begin_layout Itemize
make sure the savedisk file is not write protected (when copied from a CD-ROM
 to your HD the file ususally is write protected)
\end_layout

\begin_layout Itemize
the file must not be compressed (see section about floppy image file formats);
 when saving to a compressed image, the changes are only saved to the uncompress
ed temporary image which becomes deleted when you quit the emulator
\end_layout

\begin_layout Itemize
take care of the compatibility information described in section 1.1; often
 savedisk problems go away when using a more compatible setting as disk
 access is always a time critical thing
\end_layout

\begin_layout Itemize
some games require savedisks to be formatted in a special way; sometimes
 a freshly formatted empty AmigaDOS floppy will do, sometimes you have to
 create a disk in the game; if possible, try using the savedisk that comes
 with the game or obtain a working one
\end_layout

\begin_layout Section
Filesystems and hardfiles
\end_layout

\begin_layout Subsection
What are hardfiles?
\end_layout

\begin_layout Standard
Most of you probably already know this and may skip this paragraph.
 For the ones that are new to emulation here a short description: 
\end_layout

\begin_layout Standard
A hardfile is used to simulate a harddrive connected to the emulated Amiga.
 Technically a hardfile is a 1:1 copy of the contents of an Amiga harddisk
 partition into a file.
 Having this in mind the restriction a hardfile has comes clear: a hardfile
 is of a fixed size and doesn't grow as it is written to (like perhaps the
 Amiga RAM disk).
 When creating a hardfile you have to specify the size the hardfile shall
 have, i.e.
 the amount of storage space you will be able to use on the simulated Amiga
 harddrive.
 This device supports all features a real Amiga harddrive has (so you may
 for example defrag it).
\end_layout

\begin_layout Subsection
How do I use a hardfile?
\end_layout

\begin_layout Standard
First of all you need a hardfile that is to be used.
 Perhaps you already have one from UAE or DOSFellow; if you don't have one
 you may now create it in the configuration menu under the hardfile tab.
 Note that a newly created hardfile is just a file containing scratch; you
 need to format it on the Amiga side to be able to write any data to it.
 
\end_layout

\begin_layout Standard
Add the hardfile to your config in the configuration menu's hardfile tab.
 Make sure that "Disable Autoconfig-devices" (section Various) is 
\series bold
not
\series default
 checked.
 The Autoconfig functionality is needed for the Amiga to automatically detect
 and initialize the device.
\end_layout

\begin_layout Standard
Also make sure you use a Kickstart version 2.0 or newer; with Kickstart 1.x
 the only way to use hardfiles is by the use of mount files (this possibility
 may be explained in more detail in a later version of this manual) and
 booting directly from them is not possible (since the old Kickstart versions
 don't support Autoconfig).
\end_layout

\begin_layout Standard
You should now be able to use the file.
 If you have configured a newly created file, you should insert a Workbench
 disk file fitting the configured Kickstart, boot it and format the hardfile
 the way you want it (it will appear as FELLOW0).
\end_layout

\begin_layout Standard
If you're going to use an already existing file (and this file is bootable,
 not only a data partition) eject all inserted floppy images and boot from
 it (again you should make sure the used Kickstart version fits the one
 the hardfile has been installed with).
\end_layout

\begin_layout Subsection
Can I use my existing UAE hardfiles (*.hdf) with WinFellow?
\end_layout

\begin_layout Standard
Yes, WinFellow and UAE use the same hardfile format.
 When using hardfiles generated by UAE, these must not make use of the Picasso96
 uaegfx-driver, as this one is not yet supported by WinFellow.
 It also must not make use of AGA screenmodes.
\end_layout

\begin_layout Section
Filesystems
\end_layout

\begin_layout Subsection
What are filesystems?
\end_layout

\begin_layout Standard
Like a hardfile, a filesystem is also used to simulate some kind of device
 connected to the emulated Amiga.
 But instead of using a file you configure WinFellow to use a directory
 on one your windows devices that shall be used to store or read data.
\end_layout

\begin_layout Standard
This has the advantage that you don't have to care about the amount of data
 you want to store.
\end_layout

\begin_layout Standard
But this also has disadvantages: though on the first look the simulated
 device looks like a harddisk, it misses some features: formatting or defragging
 a filesystem device is absolutely impossible (and would not make sense
 either).
 To defrag it you'll have to run the windows defrag over the harddrive you
 stored the files on.
\end_layout

\begin_layout Standard
Another disadvantage lies in the differences between the Windows and the
 Amiga filesystem.
 The Amiga filesystem makes use of 8 different storage flags (e.g.
 executable, writable, ...).
 The Windows filesystem only supports 3 flags, but even these aren't really
 usable for this purpose so that actually only the windows archive flag
 is used to represent Amiga flags.
 For an Amiga, filenames like " " or "..
 " are fine; Windows runs into some serious trouble when you try to use
 such names.
 Just try to create a file named CON, then you'll know what I mean...
 ;)
\end_layout

\begin_layout Standard
To get rid of this problem, a technique called fsdb (FileSystem DataBase)
 has been introduced in UAE (and WinFellow, as WinFellow uses UAE code for
 filesystem support).
\end_layout

\begin_layout Standard
Every time a file has a name not supported by Windows, or uses flags that
 can't be stored, or has a comment, an entry for this file is created in
 a special database file.
 This file stores the local name, the according Amiga filename, the optional
 comment and the flags that are used.
 That way it is possible to use the device exactly the same way an Amiga
 device could be used, allowing to even boot from a filesystem (this was
 impossible without the fsdb).
\end_layout

\begin_layout Standard
Why is all this relevant?
\end_layout

\begin_layout Standard
WinUAE uses a slightly different way of storing the flag information, as
 it also utilizes the write-protection bit to represent the Amiga's writable
 and deletable flags; we do not think that this is the optimal solution,
 and thus implemented it another way.
 This means that the filesystem support from WinUAE is not necessarily 100%
 compatible with WinFellow's support.
 
\emph on
So be careful when exchanging data over a filesystem between them both
\emph default
.
\end_layout

\begin_layout Subsection
How do I use a filesystem?
\end_layout

\begin_layout Standard
Configure the filesystem in the configuration menu on tab filesystem.
 You might also check "Automount Windows-drives"; this will automatically
 mount all hard disks, connected network drives and CD-ROMs as Amiga devices
 (so you don't have to configure anything manually).
\end_layout

\begin_layout Standard
Make sure that "Disable Autoconfig-devices" (section Various) is 
\emph on
not
\emph default
 checked.
 The Autoconfig functionality is needed for the Amiga to automatically detect
 and initialize the device.
\end_layout

\begin_layout Standard
As with hardfiles, ensure that you use a Kickstart version 2.0 or greater.
\end_layout

\begin_layout Standard
Now you need something you may boot from.
 I suggest a Workbench disk or a hardfile.
 The device will appear under the name you configured.
 Install Workbench to the filesystem if you like and try booting without
 the floppy inserted.
\end_layout

\begin_layout Section
GUI
\end_layout

\begin_layout Subsection
How can I play a game that has more than one disk / How can I switch a disk(imag
e)?
\end_layout

\begin_layout Standard
You can switch disks(images) at runtime in WinFellow.
 You can do this by pressing the function key <F11> during the emulation.
 After pressing the key you can see the main window again and this way you
 can change the disk(images).
 By clicking the "Start Emulation" button you can continue the emulation
 at the point before you pressed the function key.
\end_layout

\begin_layout Section
Known Bugs
\end_layout

\begin_layout Subsection
The player is invisible in <insert your favourite game here>
\end_layout

\begin_layout Standard
There are certain games in which sprites aren't rendered correctly, resulting
 in invisible objects.
 Known games having this problem are Stardust, SuperFrog, Robocop 2, Zool,
 Alien Breed and Fire And Ice.
\end_layout

\begin_layout Subsection
The player doesn't collide with other game objects
\end_layout

\begin_layout Standard
Not all collision types are properly implemented in WinFellow; for example
 in Transplant the spacecraft never collides with the rocks flying around.
 Known to have this problem is Transplant, but there probably are much more
 titles having this problem.
\end_layout

\begin_layout Section
I still have questions!
\end_layout

\begin_layout Standard
If you have questions not covered in this manual, find problems not mentioned
 here or simply don't understand something written here, don't hesitate
 to mail one of us.
 This manual is a work in progress, and to be able to maintain it we need
 your
\end_layout

\begin_layout Standard
input.
 Also, feel free to post a question to the 
\begin_inset CommandInset href
LatexCommand href
name "WinFellow support forum"
target "http://eab.abime.net/forumdisplay.php?f=28"

\end_inset

.
\end_layout

\begin_layout Part
Module Ripper
\end_layout

\begin_layout Standard
Since many users asked about it the, old module ripper contained in DOS
 Fellow has been ported into the new Fellow environment and has undergone
 some major changes.
 This document is meant to describe Fellow's mod-ripper in it's current
 form.
\end_layout

\begin_layout Section
The Module Ripper 
\end_layout

\begin_layout Subsection
Credits
\end_layout

\begin_layout Standard
Special thanks must go out to 
\begin_inset CommandInset href
LatexCommand href
name "ExoticA"
target "http://www.exotica.org.uk/"

\end_inset

 for the excellent file format section, and Sylvain "Asle" Chipaux for his
 
\begin_inset CommandInset href
LatexCommand href
name "Amiga Mod Packers Described Page"
target "http://www.multimania.com/asle/ampd.html"

\end_inset

.
 
\end_layout

\begin_layout Standard
Without the information provided on these pages the mod-ripper wouldn't
 have been possible.
 Another source of information was the 
\begin_inset CommandInset href
LatexCommand href
name "Extended Module Player"
target "http://xmp.sourceforge.net/"

\end_inset

source code, which also has some helpful information about various module
 formats.
\end_layout

\begin_layout Subsection
Supported Module Formats 
\end_layout

\begin_layout Standard
The following formats are currently supported; more are probably to come
 later (we'll have to see the demand):
\end_layout

\begin_layout Itemize
ProTracker and clones (Protracker, Noisetracker, Startrekker 4/8 channel,
 ...) 
\end_layout

\begin_layout Itemize
SoundFX 1.3 and 2.0 
\end_layout

\begin_layout Itemize
SoundMon 1.0, 2.0 and 2.2 
\end_layout

\begin_layout Itemize
FredEditor 
\end_layout

\begin_layout Itemize
ProRunner 2.0 
\end_layout

\begin_layout Itemize
ThePlayer 4
\end_layout

\begin_layout Standard
Note that while ProTracker files play fine in many music replayers like
 WinAmp, this isn't the case for the other more exotic formats.
 When you look for a good module player capable of playing all kinds of
 Amiga formats try XMPlay with the DeliX plug-in.
 DeliPlayer is an option is well, but is no longer under active development.
\end_layout

\begin_layout Subsection
How to invoke the mod-ripper? 
\end_layout

\begin_layout Standard
The mod-ripper is a bit hidden in Fellow's integrated debugger.
 When running it, you are first prompted if you want to scan the emulated
 Amiga's memory for modules.
 This is the recommended way to rip modules; start the game or demo you
 want to rip the music from and when the song you want to rip is actually
 playing you may halt the emulation and run the mod-ripper to gather the
 song out of the memory.
 
\end_layout

\begin_layout Standard
The other possible way is to rip from floppies; the module ripper detects
 when floppies are inserted and prompts you for each one if you want to
 rip from that floppy; this works ok with some games or demos that use custom
 trackloaders but will usually result in damaged modules when used on formatted
 AmigaDOS disks so that you have to be abit careful with modules ripped
 off a disk.
\end_layout

\begin_layout Subsection
File naming conventions
\end_layout

\begin_layout Standard
Whereas common module types like Protracker have a unique ending (*.mod),
 this is not the case for many other formats.
 For these, the ripper uses the default extension .cus to indicate a format
 that is not very widespread; these are the ones that won't play in most
 players so you'll need either a capable Amiga module player or a converter
 to play these.
\end_layout

\begin_layout Subsection
Dump Chipmem option
\end_layout

\begin_layout Standard
In the debugger you also find a button "Dump Chip-memory".
 This may be used to save the contents of the whole chipmem into a file
 and so allows you to run other external module rippers over that.
\end_layout

\begin_layout Subsection
Final note 
\end_layout

\begin_layout Standard
The module ripper is in an experimental state.
 Should you experience issues with an exported file, send Fellow's logfile
 along with a description of what you tried to rip music from (game/demo
 name) and the information the file save requester showed to 
\begin_inset CommandInset href
LatexCommand href
name "Torsten Enderling"
target "carfesh@gmx.net"
type "mailto:"

\end_inset

 so that we can fix the problem.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagebreak
\end_layout

\end_inset


\end_layout

\begin_layout Part
GNU General Public License, Version 2
\end_layout

\begin_layout Standard
WinFellow is developed and distributed under the terms of the GNU General
 Public License, Version 2.
 For the exact terms of the license, please see the file gpl-2.0.pdf, that
 should have been distributed together with this manual.
\end_layout

\end_body
\end_document
