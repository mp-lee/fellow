%ifndef WIN32_CALLCONV_MAC
%define WIN32_CALLCONV_MAC


;==============================================================================
; Microsoft Visual C++ cdecl calling convention used
; 1. Save registers esi, edi, ebx, eax, ecx
; 2. Push arguments in reverse order
; 3. push ebp, make new ebp
; 4. call functions
; 5. get ebp, set esi to ebp
; 6. Move possible return value from eax to wherever it needs to be
;==============================================================================

%macro CCALLCONV_IN_EDXECX 0
		push	ebp
		push	esi
		push	edi
		push	ebx
		push	eax
		push	ecx
		push	edx
		mov	ebp, esp
%endmacro


%macro CCALLCONV_IN_EBP 0
		push	ebp
		push	esi
		push	edi
		push	ebx
		push	eax
		push	ebp
		mov	ebp, esp
%endmacro


%macro CCALLCONV_IN_EAXEDX 0
		push	ebp
		push	esi
		push	edi
		push	ebx
		push	eax
		push	edx
		push	eax
		mov	ebp, esp
%endmacro


%macro CCALLCONV_IN_ECX 0
		push	ebp
		push	esi
		push	edi
		push	ebx
		push	eax
		push	ecx
		mov	ebp, esp
%endmacro


%macro CCALLCONV_IN_EDX 0
		push	ebp
		push	esi
		push	edi
		push	ebx
		push	eax
		push	edx
		mov	ebp, esp
%endmacro


%macro CCALLCONV_IN_EAX 0
		push	ebp
		push	esi
		push	edi
		push	ebx
		push	eax
		push	eax
		mov	ebp, esp
%endmacro


%macro CCALLCONV_IN_NONE 0
		push	ebp
		push	esi
		push	edi
		push	ebx
		push	eax
		mov	ebp, esp
%endmacro


%macro CCALLCONV_OUT_EDX	1
		add	esp, 4*%1
		mov	edx, eax
		pop	eax
		pop	ebx
		pop	edi
		pop	esi
		pop	ebp
%endmacro

%macro CCALLCONV_OUT_ECX	1
		add	esp, 4*%1
		mov	ecx, eax
		pop	eax
		pop	ebx
		pop	edi
		pop	esi
		pop	ebp
%endmacro

%macro CCALLCONV_OUT_EAX	1
		add	esp, 4*%1
		add	esp, 4
		pop	ebx
		pop	edi
		pop	esi
		pop	ebp
%endmacro


%macro CCALLCONV_OUT_NONE 1
		add	esp, 4*%1
		pop	eax
		pop	ebx
		pop	edi
		pop	esi
		pop	ebp
%endmacro


%macro ASMCALLCONV_IN_ECX 0
		push	ebp
		mov	ebp, esp
		push	esi
		push	edi
		push	ebx
		mov	ecx, dword [8 + ebp]
%endmacro


%macro ASMCALLCONV_IN_NONE 0
		push	ebp
		mov	ebp, esp
		push	esi
		push	edi
		push	ebx
%endmacro


%macro ASMCALLCONV_IN_EDXECX 0
		push	ebp
		mov	ebp, esp
		push	esi
		push	edi
		push	ebx
		mov	edx, dword [8 + ebp]
		mov	ecx, dword [12 + ebp]
%endmacro


%macro ASMCALLCONV_OUT_EDX 0
		pop	ebx
		pop	edi
		pop	esi
		pop	ebp
		mov	eax, edx
%endmacro


%macro ASMCALLCONV_OUT_EAX 0
		pop	ebx
		pop	edi
		pop	esi
		pop	ebp
%endmacro


%macro ASMCALLCONV_OUT_NONE 0
		pop	ebx
		pop	edi
		pop	esi
		pop	ebp
%endmacro

%endif
